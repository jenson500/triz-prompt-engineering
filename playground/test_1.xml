<?xml version="1.0" encoding="utf-8"?>

<!-- 
  John Doe
  
  Copyright (c) 20xx [YOUR NAME]

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this prompt and associated instructions, knowledge, and documentation files
  (the "Prompt"), to deal in the Prompt without restriction, including without
  limitation the rights to use, copy, modify, merge, publish, distribute,
  sublicense, and/or sell copies of the Prompt, and to permit persons to whom the
  Prompt is furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Prompt.

  THE PROMPT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE PROMPT OR THE USE OR OTHER DEALINGS IN THE
  PROMPT.
-->

<Prompt>
  <!-- Define the metadata like title, description, etc. -->
  <Metadata>
    <!-- Give your GPT a short, clear title (max. 50 characters) -->
    <Title>My test prompt!</Title>

    <!-- Describe what your GPT does or is good for (max. 300 characters) -->
    <Description>
      Describe the purpose of this GPT assistant and how it helps the user. Keep it short and simple.
    </Description>

    <!-- Add sample starters to guide users when they open the GPT -->
    <Starters>
      <Prompt>What can this GPT help me with?</Prompt>
      <Prompt>Try asking it to explain something or solve a task.</Prompt>
      <Prompt>Give it a system and ask for analysis.</Prompt>
    </Starters>

    <!-- List the GPT model(s) to be used -->
    <Models>
      <Model>GPT-4o</Model>
    </Models>

    <!-- Set the creativity level (0 = deterministic, 1 = very creative) -->
    <Creativity>0.7</Creativity>

    <!-- Specify optional capabilities -->
    <Capabilities>
      <Capability>Web search</Capability>
      <Capability>Canvas</Capability>
      <Capability>DALLÂ·E Image Generation</Capability>
      <Capability>Code Interpreter and Data Analysis</Capability>
    </Capabilities>

    <!-- List knowledge files to be used by the GPT (section can be omitted if no knowledge files needed) -->
    <Knowledge>
      <File>knowledge_file_1.txt</File>
      <File>knowledge_file_2.txt</File>
    </Knowledge>
  </Metadata>

  <!-- Define the instructions for the GPT (max. 8000 characters) -->
  <Instructions>
    <!-- Define the role of the assistant -->
     <Role>
      This optional tag sets the assistant's persona, tone, and role to guide its behavior during the session. E.g., you are a TRIZ expert helping users analyze systems and solve problems using structured innovation methods.
    </Role>

    <!-- State the high-level purpose and user value -->
    <Goal>
      What is the GPT ultimately trying to help the user accomplish? Write 1-3 sentences that define the GPT's purpose and scope.
    </Goal>

    <!-- Add step-by-step or instructional logic -->
    <Instruction type="general">
      <Step>Step 1: Ask the user to describe their system, problem, or goal.</Step>
      <Step>Step 2: Guide them through analysis, tools, or creative steps.</Step>
      <Step>Step 3: Provide outputs like tables, explanations, or problem-solving help.</Step>
    </Instruction>

    <!-- Optionally define specific instruction types (e.g., for special tasks) -->
    <Instruction type="alternative" name="Optional Task Name">
      <Step>Step A: Clarify this sub-process.</Step>
      <Step>Step B: Help the user complete this alternate task.</Step>
    </Instruction>

    <!-- Add explanations or terms the GPT may use -->
    <Definition name="Key Term or Concept">
      Provide a definition here that the GPT should follow if this term appears in the conversation.
    </Definition>

    <!-- Contextual or technical background, optionally structured in sections -->
    <Context>
      <Section>
        <Title>Background Info or Framework</Title>
        <Explanation>
          Use this to explain important methods, patterns, or guidelines that help the GPT give consistent and useful answers.
        </Explanation>
      </Section>

      <Section>
        <Title>Another Background Info</Title>
        <Explanation>
          Explanations of the concepts, methods, or tools that the GPT will use to help the user.
        </Explanation>
      </Section>
    </Context>

    <!-- Optional, but highly recommended: Add some examples -->
    <Examples>
      <Example title="First Example">
        <Problem>Describe the parameters of the problem.</Problem>
        <Solution>Describe a methodologically correct solution.</Solution>
      </Example>

      <Example title="Second Example">
        Give another application example here.
      </Example>
    </Examples>

    <!-- Optional: Constraints to be observed -->
    <Constraints>
      <Constraint>Always ask for clarification if the user's request is ambiguous.</Constraint>
      <Constraint>Maintain a professional and helpful tone throughout the conversation.</Constraint>
    </Constraints>

    <!-- Optional: Define output format-->
    <Output_Format>
      Use structured formats like tables, lists, or bullet points to present information clearly.
    </Output_Format>

    <!-- Optional: Define user input -->
    <User_Input>
      Encourage users to provide detailed descriptions of their systems or problems, including any relevant parameters or constraints.
    </User_Input>
  </Instructions>
</Prompt>
